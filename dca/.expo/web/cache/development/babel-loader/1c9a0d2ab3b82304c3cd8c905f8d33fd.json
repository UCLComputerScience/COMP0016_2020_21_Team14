{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\peris\\\\Desktop\\\\dca\\\\src\\\\screens\\\\Post.js\";\n\nimport React from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport HTML from 'react-native-render-html';\nimport Axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\nimport { WebView } from 'react-native-webview';\n\nvar Post = function Post(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      post = _React$useState2[0],\n      setPost = _React$useState2[1];\n\n  var post_id = AsyncStorage.getItem('post_id');\n  console.log(post_id);\n  React.useEffect(function () {\n    Axios.get(\"http://arthurmurraydcp.com/wp-json/wp/v2/posts?&include=\" + post_id).then(function (response) {\n      setPost(response.data);\n      console.log(response.data);\n    });\n  }, [setPost]);\n  return React.createElement(ScrollView, {\n    style: {\n      flex: 1,\n      backgroundColor: 'rgba(231, 207, 200, 0.9)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Post;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  card: {\n    width: '90%',\n    alignSelf: 'center',\n    backgroundColor: '#FFFFFF',\n    marginVertical: 10\n  },\n  title: {\n    textAlign: 'center'\n  },\n  image: {\n    width: 420,\n    height: 90,\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["C:/Users/peris/Desktop/dca/src/screens/Post.js"],"names":["React","AsyncStorage","HTML","Axios","Avatar","Button","Card","Title","Paragraph","List","IGNORED_TAGS","WebView","Post","navigation","useState","post","setPost","post_id","getItem","console","log","useEffect","get","then","response","data","flex","backgroundColor","styles","StyleSheet","create","container","card","width","alignSelf","marginVertical","title","textAlign","image","height","resizeMode"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,IAAjD,QAA6D,oBAA7D;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,wBACHb,KAAK,CAACc,QAAN,CAAe,EAAf,CADG;AAAA;AAAA,MACpBC,IADoB;AAAA,MACdC,OADc;;AAE3B,MAAMC,OAAO,GAAGhB,YAAY,CAACiB,OAAb,CAAqB,SAArB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAjB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,YAAM;AAClBlB,IAAAA,KAAK,CAACmB,GAAN,8DAAqEL,OAArE,EAAgFM,IAAhF,CAAqF,UAAAC,QAAQ,EAAI;AAC7FR,MAAAA,OAAO,CAACQ,QAAQ,CAACC,IAAV,CAAP;AAAwBN,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB;AAC3B,KAFD;AAGH,GAJD,EAIG,CAACT,OAAD,CAJH;AAMA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAI;AAACU,MAAAA,IAAI,EAAC,CAAN;AAASC,MAAAA,eAAe,EAAE;AAA1B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAsEH,CAhFD;;AAkFA,eAAef,IAAf;AAEA,IAAMgB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,SAAS,EAAE,QAFT;AAGFP,IAAAA,eAAe,EAAE,SAHf;AAIFQ,IAAAA,cAAc,EAAE;AAJd,GAJuB;AAU7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE;AADR,GAVsB;AAa7BC,EAAAA,KAAK,EAAE;AACHL,IAAAA,KAAK,EAAE,GADJ;AACSM,IAAAA,MAAM,EAAE,EADjB;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAbsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport HTML from 'react-native-render-html';\r\nimport Axios from 'axios';\r\nimport { StyleSheet, Dimensions, Image, FlatList, Text, View, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\r\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nconst Post = ({navigation}) => {\r\n    const [post, setPost] = React.useState([]);\r\n    const post_id = AsyncStorage.getItem('post_id');\r\n    console.log(post_id);\r\n    React.useEffect(() => {\r\n        Axios.get(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?&include=${post_id}`).then(response => {\r\n            setPost(response.data); console.log(response.data);\r\n        });\r\n    }, [setPost]);\r\n\r\n    return (\r\n        <ScrollView style = {{flex:1, backgroundColor: 'rgba(231, 207, 200, 0.9)'}}>\r\n            {/* <HTML\r\n                    ignoredTags={IGNORED_TAGS.filter(tag => tag !== 'video')}\r\n                    // source = {{uri: post.content.rendered}}\r\n                    renderers={{\r\n                        video: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                            return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                <WebView\r\n                                    scrollEnabled={false}\r\n                                    mediaPlaybackRequiresUserAction={true}\r\n                                    allowsInlineMediaPlayback={true}\r\n                                    javaScriptEnabled={true}\r\n                                    scalesPageToFit={false}\r\n                                    allowsFullscreenVideo={true}\r\n                                    domStorageEnabled={true}\r\n                                    allowFileAccess={false}\r\n                                    source = {{ html: `\r\n                                    <video width=\"100%\" height=\"100%\" controls>\r\n                                        <source src=\"${htmlAttribs.src}\" type=\"video/mp4\">\r\n                                    </video>\r\n                                    ` }}\r\n                                    style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                />\r\n                            </View>\r\n                        },\r\n                        iframe: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                            return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                <WebView\r\n                                    scrollEnabled={false}\r\n                                    mediaPlaybackRequiresUserAction={true}\r\n                                    allowsInlineMediaPlayback={true}\r\n                                    javaScriptEnabled={true}\r\n                                    injectedJavaScript={INJECTEDJAVASCRIPT}\r\n                                    onMessage={() => {}}\r\n                                    scalesPageToFit={false}\r\n                                    allowsFullscreenVideo={true}\r\n                                    domStorageEnabled={true}\r\n                                    allowFileAccess={false}\r\n                                    source={{ uri: htmlAttribs.src }}\r\n                                    style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                />\r\n                            </View> \r\n                        }\r\n                    }}\r\n                /> */}\r\n            </ScrollView>\r\n        // <View style = {styles.container}>\r\n        //     <FlatList\r\n        //         data = {screen == 'Home' ? dancePosts : musicPosts}\r\n        //         keyExtractor = {item => item.id.toString()}\r\n        //         ListHeaderComponent = {\r\n        //             <Image\r\n        //                 source = { require('../../assets/logo.png') }\r\n        //                 style = {{ resizeMode: \"contain\", width: 420, height: 90}}\r\n        //             />\r\n        //         }\r\n        //         renderItem = {({item}) => (\r\n        //             <TouchableOpacity onPress = {() => {navigation.navigate(\"Post\", {post_id: item.id})}} activeOpacity = {0.9}>\r\n        //                 <Card style = {styles.card}>\r\n        //                     <Card.Content>\r\n        //                         <Title style = {styles.title}> <HTML source={{html: item.title.rendered}}/></Title>\r\n        //                     </Card.Content>\r\n        //                     <Card.Cover source = {{ uri: item.featured_media_src_url }}/>\r\n        //                 </Card>\r\n        //             </TouchableOpacity>\r\n        //         )}\r\n        //     />\r\n        // </View>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    card: {\r\n        width: '90%',\r\n        alignSelf: 'center',\r\n        backgroundColor: '#FFFFFF',\r\n        marginVertical: 10\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        width: 420, height: 90,\r\n        resizeMode: \"contain\"\r\n    }\r\n});\r\n\r\n// import React from 'react';\r\n// import { StyleSheet, Dimensions, FlatList, Text, View, ScrollView } from 'react-native';\r\n// import { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\r\n// import { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\r\n// import HTML from 'react-native-render-html';\r\n// import { WebView } from 'react-native-webview';\r\n\r\n// export default class Post extends React.Component {\r\n//     componentDidMount() {\r\n//         this.fetchPost();\r\n//     }\r\n    \r\n//     async fetchPost() {\r\n//         const post_id = this.props.route.params?.post_id;\r\n\r\n//         const response = await fetch(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?&include=${post_id}`);\r\n//         const post = await response.json();\r\n//         console.log(post);\r\n//         this.setState({ post: post, isLoading: false });\r\n//     }\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n        \r\n//         this.state = {\r\n//             post: [],\r\n//             isLoading: true\r\n//         };\r\n//     }\r\n\r\n//     render() {\r\n//         const INJECTEDJAVASCRIPT = \r\n//             `const meta = document.createElement('meta');\r\n//             meta.setAttribute('content', 'width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0');\r\n//             meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);`\r\n//         ;\r\n        \r\n//         return (\r\n//             <ScrollView style = {{flex:1, backgroundColor: 'rgba(231, 207, 200, 0.9)'}}>\r\n//                 <HTML\r\n//                     ignoredTags={IGNORED_TAGS.filter(tag => tag !== 'video')}\r\n//                     source = {{uri: this.state.post.content}}\r\n//                     renderers={{\r\n//                         video: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n//                             return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n//                                 <WebView\r\n//                                     scrollEnabled={false}\r\n//                                     mediaPlaybackRequiresUserAction={true}\r\n//                                     allowsInlineMediaPlayback={true}\r\n//                                     javaScriptEnabled={true}\r\n//                                     scalesPageToFit={false}\r\n//                                     allowsFullscreenVideo={true}\r\n//                                     domStorageEnabled={true}\r\n//                                     allowFileAccess={false}\r\n//                                     source = {{ html: `\r\n//                                     <video width=\"100%\" height=\"100%\" controls>\r\n//                                         <source src=\"${htmlAttribs.src}\" type=\"video/mp4\">\r\n//                                     </video>\r\n//                                     ` }}\r\n//                                     style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n//                                 />\r\n//                             </View>\r\n//                         },\r\n//                         iframe: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n//                             return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n//                                 <WebView\r\n//                                     scrollEnabled={false}\r\n//                                     mediaPlaybackRequiresUserAction={true}\r\n//                                     allowsInlineMediaPlayback={true}\r\n//                                     javaScriptEnabled={true}\r\n//                                     injectedJavaScript={INJECTEDJAVASCRIPT}\r\n//                                     onMessage={() => {}}\r\n//                                     scalesPageToFit={false}\r\n//                                     allowsFullscreenVideo={true}\r\n//                                     domStorageEnabled={true}\r\n//                                     allowFileAccess={false}\r\n//                                     source={{ uri: htmlAttribs.src }}\r\n//                                     style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n//                                 />\r\n//                             </View> \r\n//                         }\r\n//                     }}\r\n//                 />\r\n//             </ScrollView>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// // import React from 'react';\r\n// // import { StyleSheet, Image, Text, View } from 'react-native';\r\n// // import { FlatList } from 'react-native-gesture-handler';\r\n\r\n// // const Post = () => {\r\n// //     const [post, setPost] = React.useState([]);\r\n// //     React.useEffect(() => {\r\n// //         async function loadPost() {\r\n// //             const response = await fetch(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?_embed&include=${post_id}`);\r\n// //             const post = await response.json();\r\n// //             setPost(post);\r\n// //         }\r\n\r\n// //         loadPost();\r\n// //     }, []);\r\n\r\n// //     return (\r\n// //         <View style = {styles.container}>\r\n// //             <FlatList\r\n// //                 data = {data}\r\n// //                 keyExtractor = {item => item.id.toString()}\r\n// //                 renderItem = {({item}) => (\r\n// //                     <TouchableOpacity onPress = {() => {navigation.navigate(\"Post\")}} activeOpacity = {0.9}>\r\n// //                         <Card style = {styles.card}>\r\n// //                             <Card.Content>\r\n// //                                 <Title style = {styles.title}> <HTML source={{html: item.title.rendered}}/></Title>\r\n// //                             </Card.Content>\r\n// //                             <Card.Cover source = {{ uri: item.featured_media_src_url }}/>\r\n// //                         </Card>\r\n// //                     </TouchableOpacity>\r\n// //                 )}\r\n// //             />\r\n// //         </View>\r\n// //     )\r\n// // }\r\n\r\n// // export default Post;\r\n\r\n// // const styles = StyleSheet.create({\r\n// //     container: {\r\n// //         flex: 1\r\n// //     },\r\n// //     card: {\r\n// //         width: '90%',\r\n// //         alignSelf: 'center',\r\n// //         backgroundColor: '#FFFFFF',\r\n// //         marginVertical: 10\r\n// //     },\r\n// //     title: {\r\n// //         textAlign: 'center'\r\n// //     },\r\n// //     image: {\r\n// //         width: 420, height: 90,\r\n// //         resizeMode: \"contain\"\r\n// //     }\r\n// // });"]},"metadata":{},"sourceType":"module"}