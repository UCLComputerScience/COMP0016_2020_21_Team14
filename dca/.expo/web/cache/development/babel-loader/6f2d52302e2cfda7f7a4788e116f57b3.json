{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\peris\\\\Desktop\\\\dca\\\\src\\\\screens\\\\Post.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\nimport HTML from 'react-native-render-html';\nimport { WebView } from 'react-native-webview';\n\nvar Post = function (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  var _super = _createSuper(Post);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      post: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPost();\n    }\n  }, {\n    key: \"fetchPost\",\n    value: function fetchPost() {\n      var _this$props$route$par;\n\n      var post_id, response, post;\n      return _regeneratorRuntime.async(function fetchPost$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              post_id = (_this$props$route$par = this.props.route.params) == null ? void 0 : _this$props$route$par.post_id;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"http://arthurmurraydcp.com/wp-json/wp/v2/posts?_embed&include=\" + post_id));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              post = _context.sent;\n              this.setState({\n                post: post,\n                isLoading: false\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var post = this.state.post;\n      var INJECTEDJAVASCRIPT = \"const meta = document.createElement('meta');\\n            meta.setAttribute('content', 'width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0');\\n            meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);\";\n      return React.createElement(ScrollView, {\n        style: {\n          flex: 1,\n          backgroundColor: 'rgba(231, 207, 200, 0.9)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, React.createElement(HTML, {\n        ignoredTags: IGNORED_TAGS.filter(function (tag) {\n          return tag !== 'video';\n        }),\n        source: {\n          html: item.content.rendered\n        },\n        renderers: {\n          video: function video(htmlAttribs, children, convertedCSSStyles, passProps) {\n            return React.createElement(View, {\n              key: passProps.key,\n              style: {\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0,\n                marginTop: 16,\n                marginBottom: 16\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 36\n              }\n            }, React.createElement(WebView, {\n              scrollEnabled: false,\n              mediaPlaybackRequiresUserAction: true,\n              allowsInlineMediaPlayback: true,\n              javaScriptEnabled: true,\n              scalesPageToFit: false,\n              allowsFullscreenVideo: true,\n              domStorageEnabled: true,\n              allowFileAccess: false,\n              source: {\n                html: \"\\n                                    <video width=\\\"100%\\\" height=\\\"100%\\\" controls>\\n                                        <source src=\\\"\" + htmlAttribs.src + \"\\\" type=\\\"video/mp4\\\">\\n                                    </video>\\n                                    \"\n              },\n              style: {\n                flex: 1,\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }\n            }));\n          },\n          iframe: function iframe(htmlAttribs, children, convertedCSSStyles, passProps) {\n            return React.createElement(View, {\n              key: passProps.key,\n              style: {\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0,\n                marginTop: 16,\n                marginBottom: 16\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 36\n              }\n            }, React.createElement(WebView, {\n              scrollEnabled: false,\n              mediaPlaybackRequiresUserAction: true,\n              allowsInlineMediaPlayback: true,\n              javaScriptEnabled: true,\n              injectedJavaScript: INJECTEDJAVASCRIPT,\n              onMessage: function onMessage() {},\n              scalesPageToFit: false,\n              allowsFullscreenVideo: true,\n              domStorageEnabled: true,\n              allowFileAccess: false,\n              source: {\n                uri: htmlAttribs.src\n              },\n              style: {\n                flex: 1,\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }\n            }));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport { Post as default };","map":{"version":3,"sources":["C:/Users/peris/Desktop/dca/src/screens/Post.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","List","IGNORED_TAGS","HTML","WebView","Post","props","state","post","isLoading","fetchPost","post_id","route","params","fetch","response","json","setState","INJECTEDJAVASCRIPT","flex","backgroundColor","filter","tag","html","item","content","rendered","video","htmlAttribs","children","convertedCSSStyles","passProps","key","width","aspectRatio","marginTop","marginBottom","src","iframe","uri","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Dimensions, FlatList, Text, View, ScrollView } from 'react-native';\r\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\r\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\r\nimport HTML from 'react-native-render-html';\r\nimport { WebView } from 'react-native-webview';\r\n\r\nexport default class Post extends React.Component {\r\n    componentDidMount() {\r\n        this.fetchPost();\r\n    }\r\n    \r\n    async fetchPost() {\r\n        let post_id = this.props.route.params?.post_id\r\n\r\n        const response = await fetch(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?_embed&include=${post_id}`);\r\n        const post = await response.json();\r\n        this.setState({ post: post, isLoading: false });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            post: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let post = this.state.post;\r\n        const INJECTEDJAVASCRIPT = \r\n            `const meta = document.createElement('meta');\r\n            meta.setAttribute('content', 'width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0');\r\n            meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);`\r\n        ;\r\n        \r\n        return (\r\n            <ScrollView style = {{flex:1, backgroundColor: 'rgba(231, 207, 200, 0.9)'}}>\r\n                <HTML\r\n                    ignoredTags={IGNORED_TAGS.filter(tag => tag !== 'video')}\r\n                    source = {{html: item.content.rendered}}\r\n                    renderers={{\r\n                        video: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                            return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                <WebView\r\n                                    scrollEnabled={false}\r\n                                    mediaPlaybackRequiresUserAction={true}\r\n                                    allowsInlineMediaPlayback={true}\r\n                                    javaScriptEnabled={true}\r\n                                    scalesPageToFit={false}\r\n                                    allowsFullscreenVideo={true}\r\n                                    domStorageEnabled={true}\r\n                                    allowFileAccess={false}\r\n                                    source = {{ html: `\r\n                                    <video width=\"100%\" height=\"100%\" controls>\r\n                                        <source src=\"${htmlAttribs.src}\" type=\"video/mp4\">\r\n                                    </video>\r\n                                    ` }}\r\n                                    style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                />\r\n                            </View>\r\n                        },\r\n                        iframe: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                            return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                <WebView\r\n                                    scrollEnabled={false}\r\n                                    mediaPlaybackRequiresUserAction={true}\r\n                                    allowsInlineMediaPlayback={true}\r\n                                    javaScriptEnabled={true}\r\n                                    injectedJavaScript={INJECTEDJAVASCRIPT}\r\n                                    onMessage={() => {}}\r\n                                    scalesPageToFit={false}\r\n                                    allowsFullscreenVideo={true}\r\n                                    domStorageEnabled={true}\r\n                                    allowFileAccess={false}\r\n                                    source={{ uri: htmlAttribs.src }}\r\n                                    style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                />\r\n                            </View> \r\n                        }\r\n                    }}\r\n                />\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\n// import React from 'react';\r\n// import { StyleSheet, Image, Text, View } from 'react-native';\r\n// import { FlatList } from 'react-native-gesture-handler';\r\n\r\n// const Post = () => {\r\n//     const [post, setPost] = React.useState([]);\r\n//     React.useEffect(() => {\r\n//         async function loadPost() {\r\n//             const response = await fetch(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?_embed&include=${post_id}`);\r\n//             const post = await response.json();\r\n//             setPost(post);\r\n//         }\r\n\r\n//         loadPost();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <View style = {styles.container}>\r\n//             <FlatList\r\n//                 data = {data}\r\n//                 keyExtractor = {item => item.id.toString()}\r\n//                 renderItem = {({item}) => (\r\n//                     <TouchableOpacity onPress = {() => {navigation.navigate(\"Post\")}} activeOpacity = {0.9}>\r\n//                         <Card style = {styles.card}>\r\n//                             <Card.Content>\r\n//                                 <Title style = {styles.title}> <HTML source={{html: item.title.rendered}}/></Title>\r\n//                             </Card.Content>\r\n//                             <Card.Cover source = {{ uri: item.featured_media_src_url }}/>\r\n//                         </Card>\r\n//                     </TouchableOpacity>\r\n//                 )}\r\n//             />\r\n//         </View>\r\n//     )\r\n// }\r\n\r\n// export default Post;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1\r\n//     },\r\n//     card: {\r\n//         width: '90%',\r\n//         alignSelf: 'center',\r\n//         backgroundColor: '#FFFFFF',\r\n//         marginVertical: 10\r\n//     },\r\n//     title: {\r\n//         textAlign: 'center'\r\n//     },\r\n//     image: {\r\n//         width: 420, height: 90,\r\n//         resizeMode: \"contain\"\r\n//     }\r\n// });"]},"metadata":{},"sourceType":"module"}