{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\peris\\\\Desktop\\\\dca\\\\src\\\\screens\\\\Post.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\nimport { WebView } from 'react-native-webview';\nimport HTML from 'react-native-render-html';\nimport Axios from 'axios';\n\nvar Post = function Post(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      post = _React$useState2[0],\n      setPost = _React$useState2[1];\n\n  var INJECTEDJAVASCRIPT = \"const meta = document.createElement('meta');\\n            meta.setAttribute('content', 'width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0');\\n            meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);\";\n  React.useEffect(function () {\n    Axios.get(\"http://arthurmurraydcp.com/wp-json/wp/v2/posts?&include=\" + id).then(function (response) {\n      setPost(response.data);\n    });\n  }, [setPost]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: post,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        style: {\n          backgroundColor: 'rgba(231, 207, 200, 0.9)'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, React.createElement(Title, {\n        style: {\n          alignSelf: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }, \" \", React.createElement(HTML, {\n        source: {\n          html: item.title.rendered\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 68\n        }\n      })), React.createElement(Paragraph, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })), React.createElement(Card.Content, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, React.createElement(HTML, {\n        ignoredTags: IGNORED_TAGS.filter(function (tag) {\n          return tag !== 'video';\n        }),\n        source: {\n          html: item.content.rendered\n        },\n        renderers: {\n          video: function video(htmlAttribs, children, convertedCSSStyles, passProps) {\n            return React.createElement(View, {\n              key: passProps.key,\n              style: {\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0,\n                marginTop: 16,\n                marginBottom: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 48\n              }\n            }, React.createElement(WebView, {\n              scrollEnabled: false,\n              mediaPlaybackRequiresUserAction: true,\n              allowsInlineMediaPlayback: true,\n              javaScriptEnabled: true,\n              scalesPageToFit: false,\n              allowsFullscreenVideo: true,\n              domStorageEnabled: true,\n              allowFileAccess: false,\n              source: {\n                html: \"\\n                                                <video width=\\\"100%\\\" height=\\\"100%\\\" controls>\\n                                                    <source src=\\\"\" + htmlAttribs.src + \"\\\" type=\\\"video/mp4\\\">\\n                                                </video>\\n                                                \"\n              },\n              style: {\n                flex: 1,\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 45\n              }\n            }));\n          },\n          iframe: function iframe(htmlAttribs, children, convertedCSSStyles, passProps) {\n            return React.createElement(View, {\n              key: passProps.key,\n              style: {\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0,\n                marginTop: 16,\n                marginBottom: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 48\n              }\n            }, React.createElement(WebView, {\n              scrollEnabled: false,\n              mediaPlaybackRequiresUserAction: true,\n              allowsInlineMediaPlayback: true,\n              javaScriptEnabled: true,\n              injectedJavaScript: INJECTEDJAVASCRIPT,\n              onMessage: function onMessage() {},\n              scalesPageToFit: false,\n              allowsFullscreenVideo: true,\n              domStorageEnabled: true,\n              allowFileAccess: false,\n              source: {\n                uri: htmlAttribs.src\n              },\n              style: {\n                flex: 1,\n                width: \"100%\",\n                aspectRatio: 16.0 / 9.0\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }\n            }));\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Post;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  card: {\n    width: '90%',\n    alignSelf: 'center',\n    backgroundColor: '#FFFFFF',\n    marginVertical: 10\n  },\n  title: {\n    textAlign: 'center'\n  },\n  image: {\n    width: 420,\n    height: 90,\n    resizeMode: \"contain\"\n  }\n});","map":{"version":3,"sources":["C:/Users/peris/Desktop/dca/src/screens/Post.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","List","IGNORED_TAGS","WebView","HTML","Axios","Post","route","id","params","useState","post","setPost","INJECTEDJAVASCRIPT","useEffect","get","then","response","data","styles","container","item","toString","backgroundColor","alignSelf","html","title","rendered","filter","tag","content","video","htmlAttribs","children","convertedCSSStyles","passProps","key","width","aspectRatio","marginTop","marginBottom","src","flex","iframe","uri","StyleSheet","create","card","marginVertical","textAlign","image","height","resizeMode"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,IAAjD,QAA6D,oBAA7D;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAAA,MACfC,EADe,GACTD,KAAK,CAACE,MADG,CACfD,EADe;;AAAA,wBAEEb,KAAK,CAACe,QAAN,CAAe,EAAf,CAFF;AAAA;AAAA,MAEfC,IAFe;AAAA,MAETC,OAFS;;AAItB,MAAMC,kBAAkB,yRAAxB;AAMAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAM;AAClBT,IAAAA,KAAK,CAACU,GAAN,8DAAqEP,EAArE,EAA2EQ,IAA3E,CAAgF,UAAAC,QAAQ,EAAI;AACxFL,MAAAA,OAAO,CAACK,QAAQ,CAACC,IAAV,CAAP;AACH,KAFD;AAGH,GAJD,EAIG,CAACN,OAAD,CAJH;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIO,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAIT,IADZ;AAEI,IAAA,YAAY,EAAI,sBAAAU,IAAI;AAAA,aAAIA,IAAI,CAACb,EAAL,CAAQc,QAAR,EAAJ;AAAA,KAFxB;AAGI,IAAA,UAAU,EAAI;AAAA,UAAED,IAAF,SAAEA,IAAF;AAAA,aACV,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAACE,UAAAA,eAAe,EAAE;AAAlB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAI;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuC,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAE;AAACC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,KAAL,CAAWC;AAAlB,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,WAAW,EAAEzB,YAAY,CAAC0B,MAAb,CAAoB,UAAAC,GAAG;AAAA,iBAAIA,GAAG,KAAK,OAAZ;AAAA,SAAvB,CADjB;AAEI,QAAA,MAAM,EAAI;AAACJ,UAAAA,IAAI,EAAEJ,IAAI,CAACS,OAAL,CAAaH;AAApB,SAFd;AAGI,QAAA,SAAS,EAAE;AACPI,UAAAA,KAAK,EAAE,eAACC,WAAD,EAAcC,QAAd,EAAwBC,kBAAxB,EAA4CC,SAA5C,EAA0D;AAC7D,mBAAO,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEA,SAAS,CAACC,GAArB;AAA0B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,WAAW,EAAC,OAAK,GAAlC;AAAuCC,gBAAAA,SAAS,EAAC,EAAjD;AAAqDC,gBAAAA,YAAY,EAAC;AAAlE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACH,oBAAC,OAAD;AACI,cAAA,aAAa,EAAE,KADnB;AAEI,cAAA,+BAA+B,EAAE,IAFrC;AAGI,cAAA,yBAAyB,EAAE,IAH/B;AAII,cAAA,iBAAiB,EAAE,IAJvB;AAKI,cAAA,eAAe,EAAE,KALrB;AAMI,cAAA,qBAAqB,EAAE,IAN3B;AAOI,cAAA,iBAAiB,EAAE,IAPvB;AAQI,cAAA,eAAe,EAAE,KARrB;AASI,cAAA,MAAM,EAAI;AAAEf,gBAAAA,IAAI,4KAEGO,WAAW,CAACS,GAFf;AAAN,eATd;AAcI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAE,CAAR;AAAWL,gBAAAA,KAAK,EAAE,MAAlB;AAA0BC,gBAAAA,WAAW,EAAE,OAAO;AAA9C,eAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,CAAP;AAkBH,WApBM;AAqBPK,UAAAA,MAAM,EAAE,gBAACX,WAAD,EAAcC,QAAd,EAAwBC,kBAAxB,EAA4CC,SAA5C,EAA0D;AAC9D,mBAAO,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEA,SAAS,CAACC,GAArB;AAA0B,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,WAAW,EAAC,OAAK,GAAlC;AAAuCC,gBAAAA,SAAS,EAAC,EAAjD;AAAqDC,gBAAAA,YAAY,EAAC;AAAlE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACH,oBAAC,OAAD;AACI,cAAA,aAAa,EAAE,KADnB;AAEI,cAAA,+BAA+B,EAAE,IAFrC;AAGI,cAAA,yBAAyB,EAAE,IAH/B;AAII,cAAA,iBAAiB,EAAE,IAJvB;AAKI,cAAA,kBAAkB,EAAE3B,kBALxB;AAMI,cAAA,SAAS,EAAE,qBAAM,CAAE,CANvB;AAOI,cAAA,eAAe,EAAE,KAPrB;AAQI,cAAA,qBAAqB,EAAE,IAR3B;AASI,cAAA,iBAAiB,EAAE,IATvB;AAUI,cAAA,eAAe,EAAE,KAVrB;AAWI,cAAA,MAAM,EAAE;AAAE+B,gBAAAA,GAAG,EAAEZ,WAAW,CAACS;AAAnB,eAXZ;AAYI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAE,CAAR;AAAWL,gBAAAA,KAAK,EAAE,MAAlB;AAA0BC,gBAAAA,WAAW,EAAE,OAAO;AAA9C,eAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,CAAP;AAgBH;AAtCM,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADU;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AA8DH,CA9ED;;AAgFA,eAAehC,IAAf;AAEA,IAAMa,MAAM,GAAG0B,UAAU,CAACC,MAAX,CAAkB;AAC7B1B,EAAAA,SAAS,EAAE;AACPsB,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BK,EAAAA,IAAI,EAAE;AACFV,IAAAA,KAAK,EAAE,KADL;AAEFb,IAAAA,SAAS,EAAE,QAFT;AAGFD,IAAAA,eAAe,EAAE,SAHf;AAIFyB,IAAAA,cAAc,EAAE;AAJd,GAJuB;AAU7BtB,EAAAA,KAAK,EAAE;AACHuB,IAAAA,SAAS,EAAE;AADR,GAVsB;AAa7BC,EAAAA,KAAK,EAAE;AACHb,IAAAA,KAAK,EAAE,GADJ;AACSc,IAAAA,MAAM,EAAE,EADjB;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAbsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { View, ScrollView, Image, FlatList, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Avatar, Button, Card, Title, Paragraph, List } from 'react-native-paper';\r\nimport { IGNORED_TAGS } from 'react-native-render-html/src/HTMLUtils';\r\nimport { WebView } from 'react-native-webview';\r\nimport HTML from 'react-native-render-html';\r\nimport Axios from 'axios';\r\n\r\nconst Post = ({route}) => {\r\n    const {id} = route.params;\r\n    const [post, setPost] = React.useState([]);\r\n\r\n    const INJECTEDJAVASCRIPT =\r\n            `const meta = document.createElement('meta');\r\n            meta.setAttribute('content', 'width=device-width, initial-scale=0.5, maximum-scale=0.5, user-scalable=0');\r\n            meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta);`\r\n        ;\r\n\r\n    React.useEffect(() => {\r\n        Axios.get(`http://arthurmurraydcp.com/wp-json/wp/v2/posts?&include=${id}`).then(response => {\r\n            setPost(response.data);\r\n        });\r\n    }, [setPost]);\r\n\r\n    return (\r\n        <View style = {styles.container}>\r\n            <FlatList\r\n                data = {post}\r\n                keyExtractor = {item => item.id.toString()}\r\n                renderItem = {({item}) => (\r\n                    <Card style = {{backgroundColor: 'rgba(231, 207, 200, 0.9)'}}>\r\n                        <Card.Content>\r\n                            <Title style = {{alignSelf:'center'}}> <HTML source={{html: item.title.rendered}}/></Title>\r\n                            <Paragraph />\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                            <HTML\r\n                                ignoredTags={IGNORED_TAGS.filter(tag => tag !== 'video')}\r\n                                source = {{html: item.content.rendered}}\r\n                                renderers={{\r\n                                    video: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                                        return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                            <WebView\r\n                                                scrollEnabled={false}\r\n                                                mediaPlaybackRequiresUserAction={true}\r\n                                                allowsInlineMediaPlayback={true}\r\n                                                javaScriptEnabled={true}\r\n                                                scalesPageToFit={false}\r\n                                                allowsFullscreenVideo={true}\r\n                                                domStorageEnabled={true}\r\n                                                allowFileAccess={false}\r\n                                                source = {{ html: `\r\n                                                <video width=\"100%\" height=\"100%\" controls>\r\n                                                    <source src=\"${htmlAttribs.src}\" type=\"video/mp4\">\r\n                                                </video>\r\n                                                ` }}\r\n                                                style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                            />\r\n                                        </View>\r\n                                    },\r\n                                    iframe: (htmlAttribs, children, convertedCSSStyles, passProps) => {\r\n                                        return <View key={passProps.key} style={{ width: \"100%\", aspectRatio:16.0/9.0, marginTop:16, marginBottom:16 }}>\r\n                                            <WebView\r\n                                                scrollEnabled={false}\r\n                                                mediaPlaybackRequiresUserAction={true}\r\n                                                allowsInlineMediaPlayback={true}\r\n                                                javaScriptEnabled={true}\r\n                                                injectedJavaScript={INJECTEDJAVASCRIPT}\r\n                                                onMessage={() => {}}\r\n                                                scalesPageToFit={false}\r\n                                                allowsFullscreenVideo={true}\r\n                                                domStorageEnabled={true}\r\n                                                allowFileAccess={false}\r\n                                                source={{ uri: htmlAttribs.src }}\r\n                                                style={{ flex: 1, width: \"100%\", aspectRatio: 16.0 / 9.0 }}\r\n                                            />\r\n                                        </View>\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Card.Content>\r\n                    </Card>\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    card: {\r\n        width: '90%',\r\n        alignSelf: 'center',\r\n        backgroundColor: '#FFFFFF',\r\n        marginVertical: 10\r\n    },\r\n    title: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        width: 420, height: 90,\r\n        resizeMode: \"contain\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}